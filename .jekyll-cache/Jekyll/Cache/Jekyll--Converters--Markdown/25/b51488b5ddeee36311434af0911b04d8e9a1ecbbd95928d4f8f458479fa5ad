I"ù<h2 id="kubernetes-cluster-on-centos-7">Kubernetes cluster on CentOS 7</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubemaster: 192.168.1.99
kube2: 192.168.1.109
kube3: 192.168.1.167
</code></pre></div></div>
<h2 id="selinux">SELINUX</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
</code></pre></div></div>

<p>Next, disable swap (on all three machines) with the following command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>swapoff -a
</code></pre></div></div>

<p>/etc/fstab and comment out the swap entry like this:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># /dev/mapper/centos-swap swap swap defaults 0 0
</code></pre></div></div>

<p>enabling the br_netfilter kernel module on all three servers.</p>

<p>This is done with the following commands:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>modprobe br_netfilter
echo '1' &gt; /proc/sys/net/bridge/bridge-nf-call-iptables
</code></pre></div></div>

<p>Itâ€™s time to install the necessary Docker tool. On all three machines,</p>

<p>install the Docker-ce dependencies with the following command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum install -y yum-utils device-mapper-persistent-data lvm2
</code></pre></div></div>

<p>Next, add the Docker-ce repository with the command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</code></pre></div></div>

<p>Install Docker-ce with the command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum install -y docker-ce
</code></pre></div></div>

<p>vi /etc/yum.repos.d/kubernetes.repo</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
</code></pre></div></div>

<p>Save and close that file. Install Kubernetes with the command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum install -y kubelet kubeadm kubectl
</code></pre></div></div>

<p>Cgroup changes</p>

<p>Now we need to ensure that both Docker-ce and Kubernetes belong to the same control group (cgroup). By default,</p>

<p>Docker should already belong to cgroupfs</p>

<table>
  <tbody>
    <tr>
      <td>(you can check this with the command docker info</td>
      <td>grep -i cgroup).</td>
    </tr>
  </tbody>
</table>

<p>To add Kubernetes to this, issue the command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sed -i 's/cgroup-driver=systemd/cgroup-driver=cgroupfs/g' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
</code></pre></div></div>

<p>Restart the systemd daemon and the kubelet service with the commands:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl daemon-reload
systemctl restart kubelet
</code></pre></div></div>

<p>Initialize the Kubernetes cluster</p>

<p>adjusting the IP addresses to fit your needs):</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubeadm init --apiserver-advertise-address=192.168.1.99 --pod-network-cidr=192.168.1.0/16
</code></pre></div></div>

<p>Once that completes, head over to kube2 and issue the command (adjusting the IP address to fit your needs):</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubeadm join 192.168.1.99:6443 --token TOKEN --discovery-token-ca-cert-hash DISCOVERY_TOKEN
</code></pre></div></div>
<p>Where TOKEN and DISCOVERY_TOKEN are the tokens displayed after the initialization command completes.</p>

<h2 id="configuring-kubernetes">Configuring Kubernetes</h2>

<p>Before Kubernetes can be used, we must take care of a bit of configuration.</p>

<p>Issue the following three commands (to create a new .kube configuration directory,</p>

<p>copy the necessary configuration file, and give the file the proper ownership):</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
</code></pre></div></div>

<h2 id="deploy-flannel-network">Deploy flannel network</h2>

<p>Now we must deploy the flannel network to the cluster with the command:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
</code></pre></div></div>

:ET