I"[<p>win7 install Vagrant</p>

<p>‰∏ãËºâ Vagrant ÂÆâË£ùÈáçÈñã
‰∏ãËºâ virtualbox ÂÆâË£ùÈáçÈñã
Êõ¥Êñ∞ powershell</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://docs.microsoft.com/zh-tw/powershell/wmf/5.1/install-configure
</code></pre></div></div>
<p>Vagrant-centos Âú® (Áî®Ê≠§ script ÂèØ‰ª•Áõ¥Êé•Ë∑≥Âà∞ ‚Ä¶..ansible-playbook site.yaml)</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://github.com/echochio-tw/kubeadm-ansible/tree/master/Vagrantfile-centos
</code></pre></div></div>

<p>Ë®≠ÂÆö 
E:\vagrant\Vagrantfile</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># -*- mode: ruby -*-</span>
<span class="c1"># vi: set ft=ruby :</span>

<span class="no">VAGRANTFILE_API_VERSION</span> <span class="o">=</span> <span class="s2">"2"</span>

<span class="no">Vagrant</span><span class="p">.</span><span class="nf">configure</span><span class="p">(</span><span class="no">VAGRANTFILE_API_VERSION</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
  <span class="n">config</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">box</span> <span class="o">=</span> <span class="s2">"bento/centos-7.5"</span>
  <span class="c1"># If you run into issues with Ansible complaining about executable permissions,</span>
  <span class="c1"># comment the following statement and uncomment the next one.</span>
  <span class="n">config</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">synced_folder</span> <span class="s2">"."</span><span class="p">,</span> <span class="s2">"/vagrant"</span>
  <span class="c1"># config.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=700,fmode=600"]</span>
  <span class="n">config</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">provider</span> <span class="s2">"virtualbox"</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span>
    <span class="n">v</span><span class="p">.</span><span class="nf">memory</span> <span class="o">=</span> <span class="mi">2048</span>
  <span class="k">end</span>
  <span class="n">config</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">define</span> <span class="ss">:node1</span> <span class="k">do</span> <span class="o">|</span><span class="n">node1</span><span class="o">|</span>
    <span class="n">node1</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">host: </span><span class="mi">2202</span><span class="p">,</span> <span class="ss">guest: </span><span class="mi">22</span><span class="p">,</span> <span class="ss">id: </span><span class="s2">"ssh"</span><span class="p">,</span> <span class="ss">auto_correct: </span><span class="kp">true</span>
    <span class="n">node1</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="s2">"private_network"</span><span class="p">,</span> <span class="ss">ip: </span><span class="s2">"192.168.22.165"</span>
    <span class="n">node1</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">hostname</span> <span class="o">=</span> <span class="s2">"node1"</span>
	<span class="n">node1</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">provision</span> <span class="s2">"shell"</span><span class="p">,</span> <span class="ss">path: </span><span class="s2">"bootstrap.sh"</span>
  <span class="k">end</span>
  <span class="n">config</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">define</span> <span class="ss">:node2</span> <span class="k">do</span> <span class="o">|</span><span class="n">node2</span><span class="o">|</span>
    <span class="n">node2</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">host: </span><span class="mi">2203</span><span class="p">,</span> <span class="ss">guest: </span><span class="mi">22</span><span class="p">,</span> <span class="ss">id: </span><span class="s2">"ssh"</span><span class="p">,</span> <span class="ss">auto_correct: </span><span class="kp">true</span>
    <span class="n">node2</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="s2">"private_network"</span><span class="p">,</span> <span class="ss">ip: </span><span class="s2">"192.168.22.166"</span>
    <span class="n">node2</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">hostname</span> <span class="o">=</span> <span class="s2">"node2"</span>
	<span class="n">node2</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">provision</span> <span class="s2">"shell"</span><span class="p">,</span> <span class="ss">path: </span><span class="s2">"bootstrap.sh"</span>
  <span class="k">end</span>
  <span class="n">config</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">define</span> <span class="ss">:master</span><span class="p">,</span> <span class="ss">primary: </span><span class="kp">true</span> <span class="k">do</span> <span class="o">|</span><span class="n">master</span><span class="o">|</span>
    <span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">host: </span><span class="mi">8001</span><span class="p">,</span> <span class="ss">guest: </span><span class="mi">8001</span>
	<span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">host: </span><span class="mi">32162</span><span class="p">,</span> <span class="ss">guest: </span><span class="mi">32162</span>
	<span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">host: </span><span class="mi">30716</span><span class="p">,</span> <span class="ss">guest: </span><span class="mi">30716</span>
	<span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">host: </span><span class="mi">2201</span><span class="p">,</span> <span class="ss">guest: </span><span class="mi">22</span><span class="p">,</span> <span class="ss">id: </span><span class="s2">"ssh"</span><span class="p">,</span> <span class="ss">auto_correct: </span><span class="kp">true</span>
    <span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">network</span> <span class="s2">"private_network"</span><span class="p">,</span> <span class="ss">ip: </span><span class="s2">"192.168.22.164"</span>
	<span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">hostname</span> <span class="o">=</span> <span class="s2">"master"</span>
	<span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">provision</span> <span class="s2">"shell"</span><span class="p">,</span> <span class="ss">path: </span><span class="s2">"bootstrap.sh"</span>
	<span class="n">master</span><span class="p">.</span><span class="nf">vm</span><span class="p">.</span><span class="nf">provision</span> <span class="s2">"shell"</span><span class="p">,</span> <span class="ss">path: </span><span class="s2">"install_ansible.sh"</span>
  <span class="k">end</span>
  <span class="k">if</span> <span class="no">Vagrant</span><span class="p">.</span><span class="nf">has_plugin?</span><span class="p">(</span><span class="s2">"vagrant-cachier"</span><span class="p">)</span>
    <span class="n">config</span><span class="p">.</span><span class="nf">cache</span><span class="p">.</span><span class="nf">scope</span> <span class="o">=</span> <span class="ss">:box</span>
  <span class="k">end</span>
<span class="c1"># if Vagrant.has_plugin?("vagrant-proxyconf")</span>
<span class="c1">#   config.proxy.http     = "http://proxy.company.com:8080/"</span>
<span class="c1">#   config.proxy.https    = "http://proxy.company.com:8080/"</span>
<span class="c1">#   config.proxy.no_proxy = "localhost,127.0.0.1"</span>
<span class="c1"># end</span>
<span class="k">end</span>
</code></pre></div></div>
<p>E:\vagrant\bootstrap.sh</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat &lt;&lt; 'EOF' &gt;&gt; /etc/hosts
192.168.22.164 master
192.168.22.165 node1
192.168.22.166 node2
EOF
echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf
yum -y update
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
swapoff -a
</code></pre></div></div>
<p>E:\vagrant\install_ansible.sh</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum -y install epel-release
yum -y update
yum -y install ansible python-netaddr git
</code></pre></div></div>
<p>ÈñãÂßãÂÆâË£ù</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Vagrant up
</code></pre></div></div>

<p>Ë£ùÂÆåÂæåÁúãÁãÄÊ≥Å</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vagrant global-status
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>id       name   provider   state   directory
-----------------------------------------------------------------------
f6ace63  master  virtualbox running C:/vagrant
5b94637  node1  virtualbox running C:/vagrant
0da4a16  node2  virtualbox running C:/vagrant

</code></pre></div></div>
<p>ssh Âà∞ master</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Ë∑≥ÈÅé host_key_checking
sed -i 's/#host_key_checking = False/host_key_checking = False/g' /etc/ansible/ansible.cfg
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Áî¢Áîü ssh key
rm -rf /root/.ssh
ssh-keygen -t rsa -f /root/.ssh/id_rsa -q -N ""
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Ë§áË£Ω key .....
yum install -y sshpass
sshpass -p "vagrant" ssh-copy-id -i ~/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@master
sshpass -p "vagrant" ssh-copy-id -i ~/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@node1
sshpass -p "vagrant" ssh-copy-id -i ~/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@node2
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Êäì kubeadm-ansible.git
git clone https://github.com/echochio-tw/kubeadm-ansible.git
cd kubeadm-ansible/
</code></pre></div></div>
<p>hosts.ini</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[master]
192.168.22.164

[node]
192.168.22.[165:166]

[kube-cluster:children]
master
node
</code></pre></div></div>
<p>group_vars/all.yml</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Ansible
# ansible_user: root

# Kubernetes
kube_version: v1.11.1
token: b0f7b8.8d1767876297d85c

# 1.8.x feature: --feature-gates SelfHosting=true
init_opts: ""

# Any other additional opts you want to add..
kubeadm_opts: ""
# For example:
# kubeadm_opts: '--apiserver-cert-extra-sans "k8s.domain.com,kubernetes.domain.com"'

service_cidr: "10.96.0.0/12"
pod_network_cidr: "10.244.0.0/16"

# Network implementation('flannel', 'calico')
network: calico

# Change this to an appropriate interface, preferably a private network.
# For example, on DigitalOcean, you would use eth1 as that is the default private network interface.
cni_opts: "interface=eth1" # flannel: --iface=eth1, calico: interface=eth1

enable_dashboard: yes

# A list of insecure registrys you might need to define
insecure_registrys: ""
# insecure_registrys: ['gcr.io']

systemd_dir: /lib/systemd/system
system_env_dir: /etc/sysconfig
network_dir: /etc/kubernetes/network
kubeadmin_config: /etc/kubernetes/admin.conf
kube_addon_dir: /etc/kubernetes/addon
</code></pre></div></div>
<p>ping test</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ansible -i hosts.ini all -m ping
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>192.168.22.164 | SUCCESS =&gt; {
    "changed": false,
    "ping": "pong"
}
192.168.22.165 | SUCCESS =&gt; {
    "changed": false,
    "ping": "pong"
}
192.168.22.166 | SUCCESS =&gt; {
    "changed": false,
    "ping": "pong"
}
</code></pre></div></div>

<p>ÈñãÂßãÂÆâË£ù</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ansible-playbook site.yaml
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PLAY RECAP ******************************************************************************************
192.168.22.164              : ok=28   changed=22   unreachable=0    failed=0
192.168.22.165              : ok=20   changed=15   unreachable=0    failed=0
192.168.22.166              : ok=20   changed=15   unreachable=0    failed=0

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master kubeadm-ansible]# export KUBECONFIG=/etc/kubernetes/admin.conf
[root@master kubeadm-ansible]# kubectl get pods  -n kube-system
NAME                                      READY     STATUS    RESTARTS   AGE
calico-etcd-7qqn7                         1/1       Running   0          3m
calico-kube-controllers-c4df9646f-cwb7m   1/1       Running   0          3m
calico-node-flb9m                         2/2       Running   1          1m
calico-node-ksq49                         2/2       Running   1          3m
calico-node-zhqb5                         2/2       Running   0          1m
coredns-78fcdf6894-d4znm                  1/1       Running   0          3m
coredns-78fcdf6894-jk6l6                  1/1       Running   0          3m
etcd-master                               1/1       Running   0          3m
kube-apiserver-master                     1/1       Running   0          3m
kube-controller-manager-master            1/1       Running   0          3m
kube-proxy-4dphn                          1/1       Running   0          3m
kube-proxy-8525v                          1/1       Running   0          1m
kube-proxy-j54ct                          1/1       Running   0          1m
kube-scheduler-master                     1/1       Running   0          3m
kubernetes-dashboard-767dc7d4d-t65gj      1/1       Running   0          3m
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master kubeadm-ansible]# kubectl -n kube-system get service kubernetes-dashboard
NAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE
kubernetes-dashboard   ClusterIP   10.101.53.84   &lt;none&gt;        443/TCP   15m
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master kubeadm-ansible]# kubectl proxy &amp;
Starting to serve on 127.0.0.1:8001
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master kubeadm-ansible]# kubectl -n kube-system edit service kubernetes-dashboard
</code></pre></div></div>
<p>Âä†ÂÖ• externalIPs (eth0 ÈÇ£ÂÄã)</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>spec:
  clusterIP: 10.111.153.203
  externalIPs:
  - 10.0.2.15
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master ~]#  kubectl -n kube-system get service kubernetes-dashboard
NAME                   TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)         AGE
kubernetes-dashboard   NodePort   10.101.53.84   10.0.2.15     443/TCP         1h
</code></pre></div></div>

<p>Áî® host firefox Èñã ‚Ä¶.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://127.0.0.1/#!/login
</code></pre></div></div>

<p>Ë®≠ÂÆö token</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat &lt;&lt;EOF | kubectl create -f -
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: admin
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: admin
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
EOF

[root@master kubeadm-ansible]# kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') |grep "admin-token"
Name:         admin-token-64cq9

[root@master kubeadm-ansible]# kubectl -n kube-system describe secret admin-token-64cq9
Name:         admin-token-64cq9
Namespace:    kube-system
Labels:       &lt;none&gt;
Annotations:  kubernetes.io/service-account.name=admin
              kubernetes.io/service-account.uid=40c7f40f-bbe4-11e8-b802-0800278bc93f

Type:  kubernetes.io/service-account-token

Data
====
ca.crt:     1025 bytes
namespace:  11 bytes
token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi02NGNxOSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjQwYzdmNDBmLWJiZTQtMTFlOC1iODAyLTA4MDAyNzhiYzkzZiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.UilRq1LJoGI5auUHK3IY83dHwIMDKKyLs8SLmzxmmRpki7TSoEuk4w8DHpZPYwQvrK4bSivXv_GOkCz-cFucBe_c4-DtKSiGO_HBKhLQN3o8YMHge73rwuPG2tV8wO_3OBSLDkZPfDPVj7MFjlK2d_V076m0xxgnS8P8eXtkTY13pYDhP_CA5oQMliAZ4eM68HLfz8EzLFspJOIM-_Fu23IVBUU2Ut3HKjphYuu6SOKR8F4yNfhbPC3F7U6uxgMOzXxOIimhbUTqqbAroSkQee3cqQP7Xa3DSWE4ILd5rhFS9v7M6_FP7RYoGvgd7M06hvuMNcz4V8TB4MD02DbMdA
[root@master kubeadm-ansible]#
</code></pre></div></div>

<p><img src="/images/posts/kubernetes/p1.png" /></p>

<p><img src="/images/posts/kubernetes/p2.png" /></p>

<p><img src="/images/posts/kubernetes/p3.png" /></p>

<p><img src="/images/posts/kubernetes/p4.png" /></p>

<p><img src="/images/posts/kubernetes/p5.png" /></p>

<p><img src="/images/posts/kubernetes/p6.png" /></p>

<p><img src="/images/posts/kubernetes/p7.png" /></p>

<p><img src="/images/posts/kubernetes/p8.png" /></p>

<p><img src="/images/posts/kubernetes/p9.png" /></p>

<p>yml  file Deploy</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
</code></pre></div></div>

<p>yml  file Service</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kind: Service
apiVersion: v1
metadata:
  name: nginx-service
spec:
  ports:
    - name: http
      port: 80
      nodePort: 30716
  selector:
    app: nginx
  type: NodePort
</code></pre></div></div>
<p>yml file job (Êñ∑Á∑öËá™ÂãïËµ∑ ‚Ä¶ ÂèØ‰∏çË®≠ÂÆö)</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apiVersion: batch/v1
kind: Job
metadata:
  name: nginx
spec:
  template:
    metadata:
      name: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        command:
          - sleep
          - "30"
      restartPolicy: Never
</code></pre></div></div>

<p>shell make Deploy</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat &lt;&lt; 'EOF' &gt;&gt; nginx.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
EOF

[root@master ~]#  kubectl create -f nginx.yaml
deployment "nginx" created
[root@master ~]# kubectl get rs,pod,deployment
[root@master ~]# kubectl get rs,pod,deployment
NAME                                             DESIRED   CURRENT   READY     AGE
replicaset.extensions/nginx-966857787            2         2         2         8m

NAME                                 READY     STATUS    RESTARTS   AGE
pod/nginx-966857787-jbpj7            1/1       Running   1          8m
pod/nginx-966857787-vpzpd            1/1       Running   1          8m

NAME                                   DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
deployment.extensions/nginx            2         2         2            2           8m
</code></pre></div></div>

<p>shell make Service</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[root@master ~]#  kubectl expose deployment nginx --type=NodePort
service/nginx exposed
[root@master ~]# kubectl describe services nginx
Name:                     nginx
Namespace:                default
Labels:                   run=nginx
Annotations:              &lt;none&gt;
Selector:                 run=nginx
Type:                     NodePort
IP:                       10.101.98.236
Port:                     &lt;unset&gt;  80/TCP
TargetPort:               80/TCP
NodePort:                 &lt;unset&gt;  30716/TCP
Endpoints:                10.244.104.3:80,10.244.166.130:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   &lt;none&gt;
[root@master ~]# kubectl get service
NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
nginx	         NodePort    10.101.98.236   &lt;none&gt;        80:30716/TCP     16s
kubernetes       ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP          21h
</code></pre></div></div>
<p><img src="/images/posts/kubernetes/p10.png" /></p>
:ET