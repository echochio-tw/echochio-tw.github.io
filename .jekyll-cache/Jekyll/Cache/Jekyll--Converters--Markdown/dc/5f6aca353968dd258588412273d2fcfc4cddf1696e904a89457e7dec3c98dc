I"m$<p>golang 的好處不需外部 library</p>

<p>只要編譯好就可以了 …</p>

<p>例如在 linux 編譯好放入就可執行了</p>

<p>之前寫的  web-go</p>

<p>web.go :</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="n">import</span> <span class="p">(</span>
        <span class="s2">"fmt"</span>
        <span class="s2">"net/http"</span>
        <span class="s2">"github.com/ajstarks/svgo"</span>
        <span class="s2">"math/rand"</span>
        <span class="s2">"time"</span>
        <span class="s2">"log"</span>
<span class="p">)</span>

<span class="n">const</span> <span class="n">arcfmt</span> <span class="p">=</span> <span class="s2">"stroke:%s;stroke-opacity:%.2f;stroke-width:%dpx;fill:none"</span>

<span class="n">var</span> <span class="n">colors</span> <span class="p">=</span> <span class="p">[]</span><span class="k">string</span><span class="p">{</span><span class="s2">"red"</span><span class="p">,</span> <span class="s2">"green"</span><span class="p">,</span> <span class="s2">"blue"</span><span class="p">,</span> <span class="s2">"white"</span><span class="p">,</span> <span class="s2">"gray"</span><span class="p">}</span>

<span class="n">func</span> <span class="n">randarc</span><span class="p">(</span><span class="n">canvas</span> <span class="p">*</span><span class="n">svg</span><span class="p">.</span><span class="n">SVG</span><span class="p">,</span> <span class="n">aw</span><span class="p">,</span> <span class="n">ah</span><span class="p">,</span> <span class="n">sw</span> <span class="n">int</span><span class="p">,</span> <span class="n">f1</span><span class="p">,</span> <span class="n">f2</span> <span class="n">bool</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">begin</span> <span class="p">:=</span> <span class="n">rand</span><span class="p">.</span><span class="n">Intn</span><span class="p">(</span><span class="n">aw</span><span class="p">)</span>
        <span class="n">arclength</span> <span class="p">:=</span> <span class="n">rand</span><span class="p">.</span><span class="n">Intn</span><span class="p">(</span><span class="n">aw</span><span class="p">)</span>
        <span class="k">end</span> <span class="p">:=</span> <span class="n">begin</span> <span class="p">+</span> <span class="n">arclength</span>
        <span class="n">baseline</span> <span class="p">:=</span> <span class="n">ah</span> <span class="p">/</span> <span class="m">2</span>
        <span class="n">al</span> <span class="p">:=</span> <span class="n">arclength</span> <span class="p">/</span> <span class="m">2</span>
        <span class="n">cl</span> <span class="p">:=</span> <span class="n">len</span><span class="p">(</span><span class="n">colors</span><span class="p">)</span>
        <span class="n">canvas</span><span class="p">.</span><span class="n">Arc</span><span class="p">(</span><span class="n">begin</span><span class="p">,</span> <span class="n">baseline</span><span class="p">,</span> <span class="n">al</span><span class="p">,</span> <span class="n">al</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">f1</span><span class="p">,</span> <span class="n">f2</span><span class="p">,</span> <span class="k">end</span><span class="p">,</span> <span class="n">baseline</span><span class="p">,</span>
                <span class="n">fmt</span><span class="p">.</span><span class="n">Sprintf</span><span class="p">(</span><span class="n">arcfmt</span><span class="p">,</span> <span class="n">colors</span><span class="p">[</span><span class="n">rand</span><span class="p">.</span><span class="n">Intn</span><span class="p">(</span><span class="n">cl</span><span class="p">)],</span> <span class="n">rand</span><span class="p">.</span><span class="n">Float64</span><span class="p">(),</span> <span class="n">rand</span><span class="p">.</span><span class="n">Intn</span><span class="p">(</span><span class="n">sw</span><span class="p">)))</span>

<span class="p">}</span>

<span class="n">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">http</span><span class="p">.</span><span class="n">Handle</span><span class="p">(</span><span class="s2">"/"</span><span class="p">,</span> <span class="n">http</span><span class="p">.</span><span class="n">HandlerFunc</span><span class="p">(</span><span class="n">circle</span><span class="p">))</span>
        <span class="n">err</span> <span class="p">:=</span> <span class="n">http</span><span class="p">.</span><span class="n">ListenAndServe</span><span class="p">(</span><span class="s2">":9090"</span><span class="p">,</span> <span class="n">nil</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">err</span> <span class="c1">!= nil {
</span>                <span class="nb">log</span><span class="p">.</span><span class="n">Fatal</span><span class="p">(</span><span class="s2">"ListenAndServe:"</span><span class="p">,</span> <span class="n">err</span><span class="p">)</span>
        <span class="p">}</span>
<span class="p">}</span>

<span class="n">func</span> <span class="n">circle</span><span class="p">(</span><span class="n">w</span> <span class="n">http</span><span class="p">.</span><span class="n">ResponseWriter</span><span class="p">,</span> <span class="n">req</span> <span class="p">*</span><span class="n">http</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">w</span><span class="p">.</span><span class="n">Header</span><span class="p">().</span><span class="k">Set</span><span class="p">(</span><span class="s2">"Content-Type"</span><span class="p">,</span> <span class="s2">"image/svg+xml"</span><span class="p">)</span>

        <span class="n">rand</span><span class="p">.</span><span class="n">Seed</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">Now</span><span class="p">().</span><span class="n">UnixNano</span><span class="p">())</span>

        <span class="n">width</span> <span class="p">:=</span> <span class="m">800</span>
        <span class="n">height</span> <span class="p">:=</span> <span class="m">800</span>
        <span class="n">aw</span> <span class="p">:=</span> <span class="n">width</span> <span class="p">/</span> <span class="m">2</span>
        <span class="n">maxstroke</span> <span class="p">:=</span> <span class="n">height</span> <span class="p">/</span> <span class="m">10</span>
        <span class="n">literactions</span> <span class="p">:=</span> <span class="m">50</span>
        <span class="n">canvas</span> <span class="p">:=</span> <span class="n">svg</span><span class="p">.</span><span class="n">New</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
        <span class="n">canvas</span><span class="p">.</span><span class="n">Start</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span>
        <span class="n">canvas</span><span class="p">.</span><span class="n">Rect</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span>
        <span class="n">for</span> <span class="n">i</span> <span class="p">:=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">literactions</span><span class="p">;</span> <span class="n">i</span><span class="p">++</span> <span class="p">{</span>
                <span class="n">randarc</span><span class="p">(</span><span class="n">canvas</span><span class="p">,</span> <span class="n">aw</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">maxstroke</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">)</span>
                <span class="n">randarc</span><span class="p">(</span><span class="n">canvas</span><span class="p">,</span> <span class="n">aw</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">maxstroke</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">)</span>
        <span class="p">}</span>
        <span class="n">canvas</span><span class="p">.</span><span class="k">End</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<p>用 docker 的  golang:latest 編譯好在放到 docker 內執行</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Dockerfile :

FROM golang:latest AS build-env
COPY web.go /go/web.go
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go get github.com/ajstarks/svgo
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o web

# final stage
FROM centurylink/ca-certs
COPY --from=build-env /go/web /
ENTRYPOINT ["/web"]
</code></pre></div></div>
<p>這樣 image 就小很多了 …….</p>
:ET