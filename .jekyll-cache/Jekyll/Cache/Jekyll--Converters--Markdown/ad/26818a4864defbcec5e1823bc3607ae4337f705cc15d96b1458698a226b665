I"7<p>想用 git client  …..</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># alias git='docker run --rm -v `pwd`:/git:Z echochio/git'
</code></pre></div></div>

<p>想用 go 編輯程式</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># alias go='docker run --rm -v "$PWD":/go:Z -w /go golang go'
</code></pre></div></div>

<p>想用 java  …..</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># alias java='docker run -it --rm anapsix/alpine-java java'
</code></pre></div></div>

<p>想用 gcc &amp; make ……. 4.9 或 5.4 或 6.3 ……只是編輯完的要看看 lib 是否有需要 (用 ldd)
要由 gcc:6.3 內複製出來 ……</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#  alias gcc='docker run --rm -v "$PWD":/usr/src/myapp:Z -w /usr/src/myapp gcc:6.3 gcc'
#  alias make='docker run --rm -v "$PWD":/usr/src/myapp:Z -w /usr/src/myapp gcc:6.3 make'
</code></pre></div></div>

<p>檢查 git client ….</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># git --help
usage: git [--version] [--help] [-c name=value]
           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]
           &lt;command&gt; [&lt;args&gt;]

The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and merge with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help &lt;command&gt;' or 'git help &lt;concept&gt;'
to read about a specific subcommand or concept.
</code></pre></div></div>

<p>檢查 go 編輯程式</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># go -version
flag provided but not defined: -version
Go is a tool for managing Go source code.

Usage:

        go command [arguments]

The commands are:

        build       compile packages and dependencies
        clean       remove object files
        doc         show documentation for package or symbol
        env         print Go environment information
        bug         start a bug report
        fix         run go tool fix on packages
        fmt         run gofmt on package sources
        generate    generate Go files by processing source
        get         download and install packages and dependencies
        install     compile and install packages and dependencies
        list        list packages
        run         compile and run Go program
        test        test packages
        tool        run specified go tool
        version     print Go version
        vet         run go tool vet on packages

Use "go help [command]" for more information about a command.

Additional help topics:

        c           calling between Go and C
        buildmode   description of build modes
        filetype    file types
        gopath      GOPATH environment variable
        environment environment variables
        importpath  import path syntax
        packages    description of package lists
        testflag    description of testing flags
        testfunc    description of testing functions

Use "go help [topic]" for more information about that topic.
</code></pre></div></div>

<p>檢查 java</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># java -version
java version "1.8.0_121"
Java(TM) SE Runtime Environment (build 1.8.0_121-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)
</code></pre></div></div>
:ET